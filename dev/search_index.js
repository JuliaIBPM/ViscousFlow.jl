var documenterSearchIndex = {"docs":
[{"location":"manual/functions/#Functions-and-types","page":"Functions and types","title":"Functions and types","text":"","category":"section"},{"location":"manual/functions/#Functions","page":"Functions and types","title":"Functions","text":"","category":"section"},{"location":"manual/functions/","page":"Functions and types","title":"Functions and types","text":"Modules = [ViscousFlow]\nOrder   = [:function]","category":"page"},{"location":"manual/functions/#ViscousFlow.setup_grid-Tuple{Tuple, Tuple, Any}","page":"Functions and types","title":"ViscousFlow.setup_grid","text":"setup_grid(xlim::Tuple,ylim::Tuple,phys_params::Dict)\n\nConstruct a Cartesian grid with limits xlim and ylim and spacing determined by the Reynolds number in the phys_params.\n\n\n\n\n\n","category":"method"},{"location":"manual/functions/#ViscousFlow.surface_point_spacing-Tuple{PhysicalGrid, Any}","page":"Functions and types","title":"ViscousFlow.surface_point_spacing","text":"surface_point_spacing(g::PhysicalGrid,phys_params)\n\nCalculate the surface point spacing for a given grid, using the specified parameter \"point spacing ratio\" in the physical parameters, or the default value (1.4) if not specified.\n\n\n\n\n\n","category":"method"},{"location":"manual/functions/#ViscousFlow.viscousflow_system-Tuple","page":"Functions and types","title":"ViscousFlow.viscousflow_system","text":"viscousflow_system(grid,[bodies];kwargs...)\n\nConstruct the operators and cache variables for a viscous flow problem.\n\nThe kwargs are the optional keyword aguments. There are several, some of which are crucial for certain types of problems.\n\nddftype = to set the DDF type. The default is CartesianGrids.Yang3.\nscaling = to set the scaling type, IndexScaling (default) or GridScaling.\ndtype = to set the element type to Float64 (default) or ComplexF64.\nphys_params = A dictionary to pass in physical parameters\nbc = A dictionary to pass in boundary condition data or functions, using \"external\"         and \"internal\" keys to pass in functions that provide the         corresponding surface data outside and inside the surface(s).\nforcing = A dictionary to pass in forcing models (via the \"forcing models\" key),               or to pass in an alternative model for              the freestream velocity (with the \"freestream\" key)\nmotions = to provide function(s) that specify the velocity of the immersed surface(s). Note: if this keyword is used, it is assumed that surfaces will move.\ntimestep_func = to pass in a function for time-dependent problems that provides the time-step size.                 It is expected that this function takes in two arguments,                 the grid::PhysicalGrid and phys_params, and returns the time step.                 It defaults to the basic Fourier/CFL type function default_timestep\n\n\n\n\n\n","category":"method"},{"location":"manual/functions/#Types","page":"Functions and types","title":"Types","text":"","category":"section"},{"location":"manual/functions/","page":"Functions and types","title":"Functions and types","text":"Modules = [ViscousFlow]\nOrder   = [:type]","category":"page"},{"location":"manual/functions/#ViscousFlow.ViscousIncompressibleFlowProblem","page":"Functions and types","title":"ViscousFlow.ViscousIncompressibleFlowProblem","text":"ViscousIncompressibleFlowProblem\n\nILM problem type dealing with vector-type data.\n\n\n\n\n\n","category":"type"},{"location":"manual/functions/#Index","page":"Functions and types","title":"Index","text":"","category":"section"},{"location":"manual/functions/","page":"Functions and types","title":"Functions and types","text":"Pages = [\"functions.md\"]","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"EditURL = \"<unknown>/literate/7.-Lid-driven-cavity.jl\"","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#.-Lid-driven-cavity-flow","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"In this notebook we will simulate the flow in a square cavity with a top moving wall.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"using ViscousFlow","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"using Plots","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Problem-specification","page":"7. Lid-driven cavity flow","title":"Problem specification","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Take Re=100 for example:","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"my_params = Dict()\nmy_params[\"Re\"] = 100","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Discretization","page":"7. Lid-driven cavity flow","title":"Discretization","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Note that the rectangle function used for making the cavity shape requires a specified half length. The immersed boundary projection method for internal flow requires the size of the domain to be at least a step size greater at the boundaries (i.e. halflength + Δx). So, for safety we make it 2 percent greater on each side.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Also, we set the grid Reynolds number to 0.5, lower than default of 2, so we have more accuracy. We also set the CFL number to 1.0, larger than the default of 0.5, so we can get to steady state faster.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"halflength=0.5\ndomain_lim=1.02*halflength\nxlim, ylim = (-domain_lim,domain_lim),(-domain_lim,domain_lim)\nmy_params[\"grid Re\"] = 0.5\nmy_params[\"CFL\"] = 1.0\ng = setup_grid(xlim,ylim,my_params)\n\nΔs = surface_point_spacing(g,my_params)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Cavity-Geometry","page":"7. Lid-driven cavity flow","title":"Cavity Geometry","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"A square cavity can be created using the Rectangle() function with the half length defined above.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"body = Rectangle(halflength,halflength,Δs)\nplot(body,fillrange=nothing)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Boundary-Condition-at-the-moving-wall","page":"7. Lid-driven cavity flow","title":"Boundary Condition at the moving wall","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Assign velocity to the top boundary (in the interior of the square). To do this, we redefine the interior boundary condition function (the \"interior\" key of the bc dictionary). We don't have to touch the exterior boundary condition, because it defaults to zero, as we desire.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Rectangles and other polygon shapes in the RigidBodyTools.jl package have a side field that allows easy access to the index range for each side. Here, we use that feature to set the x velocity along the top to 1. We also use the view function to provide access to the part of the overall velocity vector associated with body 1. That's not particularly important in this example, since there is only one body, but it is useful in problems that have multiple bodies.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"function my_vsminus(t,base_cache,phys_params,motions)\n  vsminus = zeros_surface(base_cache)\n  vsu = view(vsminus.u,base_cache,1)\n\n  top = base_cache.bl[1].side[3]\n  vsu[top] .= 1.0\n  return vsminus\nend\n\nbcdict = Dict(\"interior\" => my_vsminus)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Construct-the-system-structure","page":"7. Lid-driven cavity flow","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Now we provide our parameters and the boundary condition dictionary.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"sys = viscousflow_system(g,body,phys_params=my_params,bc=bcdict);\nnothing #hide","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Initialize","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"u0 = init_sol(sys)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Set up integrator","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"tspan = (0.0,10.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Solve","page":"7. Lid-driven cavity flow","title":"Solve","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"For demonstration purposes, we run this over 2 convective time units. (You can run it longer to get it to steady state.)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"step!(integrator,2)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/#Examine","page":"7. Lid-driven cavity flow","title":"Examine","text":"","category":"section"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"Plot the vorticity and streamlines. We take a little care with the streamlines to show the small recirculation zones in the lower corners.","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"mins, maxs = extrema(streamfunction(integrator))\nslevs = vcat(range(mins,maxs,length=11),maxs-0.00438,maxs-0.00353,maxs-0.00348)\nplot(\nplot(vorticity(integrator),sys,title=\"Vorticity\",clim=(-10,10),color=:turbo,linewidth=1.5,ylim=ylim,levels=-6:0.5:5),\nplot(streamfunction(integrator),sys,title=\"Streamfunction\",color=:black,ylim=ylim,levels=slevs)\n)","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"","category":"page"},{"location":"manual/7.-Lid-driven-cavity/","page":"7. Lid-driven cavity flow","title":"7. Lid-driven cavity flow","text":"This page was generated using Literate.jl.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"EditURL = \"<unknown>/literate/3.-Applying-pulse-forcing-to-a-flow.jl\"","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/#.-Applying-pulse-forcing-to-a-flow","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"","category":"section"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"Here, we will show how to apply a transient force to a flow.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"using ViscousFlow","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"using Plots","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"For this case, we first seek to introduce a pulse to an otherwise quiescent fluid, with no boundaries. The pulse shape will be a smooth Gaussian-distributed force, directed upward.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"We will start with the usual steps: specify the problem parameters and the discretization.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"my_params = Dict()\n\nmy_params[\"Re\"] = 200\nxlim = (-2.0,2.0)\nylim = (-2.0,4.0)\nmy_params[\"grid Re\"] = 4.0\ng = setup_grid(xlim,ylim,my_params)","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/#Construct-the-forcing","page":"3. Applying pulse forcing to a flow","title":"Construct the forcing","text":"","category":"section"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"There are a variety of forcing types available to us. Here, we will use area-type forcing, which is distributed over a region of space. We will create a short-lived force applied in the vertical direction in this region. For the spatial distribution of this forcing, we make use of a Gaussian field. We will center it at (0,0), and give it a strength of 10, using the SpatialGaussian constructor. The x component of the force we set to zero, using the EmptySpatialField constructor.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"σx = 0.5\nσy = 0.1\nx0 = y0 = 0.0\namp = 10\nforce_dist = [EmptySpatialField(),SpatialGaussian(σx,σy,x0,y0,amp)];\nnothing #hide","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"When we introduce forcing in any problem, it is essential to supply a model function that supplies the instantaneous strength of the forcing. This gives us the opportunity to specify the transient aspect of the forcing. In this example, we modulate the force in time with a Gaussian, with a small half-width in time equal to sigma_t = 01, effectively creating a pulse. We center it at time t_0 = 01 (using the >> shift operator). This is carried out in the function below, in which we create the modulating function modfcn. Note that fr.generated_field() provides the spatial distribution that we specified with our spatial field force_dist. This is multiplied by modfcn, our Gaussian pulse, evaluated at the current time.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"function forcing_model!(σ,T,t,fr::AreaRegionCache,phys_params)\n    σt = 0.1\n    t0 = 0.1\n    modfcn = Gaussian(σt,sqrt(π*σt^2)) >> t0\n    σ .= modfcn(t)*fr.generated_field()\nend","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"We pack the model function and the spatial field together into an AreaForcingModel, which we then put into a forcing dictionary. It is important to use the key \"forcing models\" for this.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"afm = AreaForcingModel(forcing_model!,spatialfield=force_dist)\nforcing_dict = Dict(\"forcing models\" => afm);\nnothing #hide","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/#Construct-the-system-structure","page":"3. Applying pulse forcing to a flow","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"We supply these forcing characteristics with the keyword argument forcing as we set up the usual system structure:","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"sys = viscousflow_system(g,phys_params=my_params,forcing=forcing_dict);\nnothing #hide","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"The remaining steps go just as they did for the previous examples. We will simulate the pulse for 4 time units:","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"u0 = init_sol(sys)\ntspan = (0.0,10.0) # longer than we need, but just being safe\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"step!(integrator,4.0)","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/#Examine","page":"3. Applying pulse forcing to a flow","title":"Examine","text":"","category":"section"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"Let's look at a sequence of snapshots of the forced flow. As we see, this short-lived force creates a dipole-like pair of counter-rotating vortices that propagates upward under its own influence.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"sol = integrator.sol\nplt = plot(layout = (1,4), size = (800, 300), legend=:false)\ntsnap = 0.1:1.0:3.1\nfor (i, t) in enumerate(tsnap)\n    plot!(plt[i],vorticity(sol,sys,t),sys,title=\"t = $(round(t,digits=2))\")\nend\nplt","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"And here is another look a the flow, this time with streamlines:","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"plot(streamfunction(integrator),sys,title=\"Streamfunction at t = $(round(integrator.t,digits=2))\")","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"We can also supply more than one pulse. If we don't change the spatial distribution, then we just redefine the model function and run it again: Let's give 3 pulses, each separated by 1 time unit.","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"function forcing_model!(σ,T,t,fr::AreaRegionCache,phys_params)\n    σt = 0.1\n    t0 = [0.1, 1.1, 2.1]\n    modfcn = (Gaussian(σt,sqrt(π*σt^2)) >> t0[1]) +\n             (Gaussian(σt,sqrt(π*σt^2)) >> t0[2]) +\n             (Gaussian(σt,sqrt(π*σt^2)) >> t0[3])\n    σ .= modfcn(t)*fr.generated_field()\nend","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"u0 = init_sol(sys)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"step!(integrator,4.0)","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/#Examine-2","page":"3. Applying pulse forcing to a flow","title":"Examine","text":"","category":"section"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"In this case, the pulses coalesce with one another","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"sol = integrator.sol\nplt = plot(layout = (1,4), size = (800, 300), legend=:false)\ntsnap = 0.1:1.0:3.1\nfor (i, t) in enumerate(tsnap)\n    plot!(plt[i],vorticity(sol,sys,t),sys,title=\"t = $(round(t,digits=2))\")\nend\nplt","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"","category":"page"},{"location":"manual/3.-Applying-pulse-forcing-to-a-flow/","page":"3. Applying pulse forcing to a flow","title":"3. Applying pulse forcing to a flow","text":"This page was generated using Literate.jl.","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"EditURL = \"<unknown>/literate/4.-Multiple-stationary-bodies.jl\"","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/#.-Multiple-stationary-bodies","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"","category":"section"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Adding multiple bodies to a problem is easy, using the concepts of a BodyList and RigidTransformList.","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"using ViscousFlow","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"using Plots","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"In this example, we will set up a problem with three cylinders arranged in a formation in a free stream.","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"my_params = Dict()\nmy_params[\"Re\"] = 200\nmy_params[\"freestream speed\"] = 1.0\nmy_params[\"freestream angle\"] = 0.0","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Set up the domain and surface point spacing","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"xlim = (-2.0,4.0)\nylim = (-2.0,2.0)\nmy_params[\"grid Re\"] = 4.0\ng = setup_grid(xlim,ylim,my_params)\nΔs = surface_point_spacing(g,my_params)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/#Set-up-bodies","page":"4. Multiple stationary bodies","title":"Set up bodies","text":"","category":"section"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"We start by initializing a BodyList and an associated RigidTransformList. Each member of the RigidTransformList will be used to place the respective body in the correct position and orientation.","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"bl = BodyList()\ntl = RigidTransformList()","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Place the first body at (-1,0)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"push!(bl,Circle(0.5,Δs))\npush!(tl,RigidTransform((-1,0),0));\nnothing #hide","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Place the second body at (1,-1)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"push!(bl,Circle(0.5,Δs))\npush!(tl,RigidTransform((1,-1),0));\nnothing #hide","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"and place the third body at (1,1)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"push!(bl,Circle(0.5,Δs))\npush!(tl,RigidTransform((1,1),0))","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Perform the actual transformation. Note that this operation works in-place:","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"tl(bl)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/#Plot-the-initial-configuration-of-the-bodies","page":"4. Multiple stationary bodies","title":"Plot the initial configuration of the bodies","text":"","category":"section"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Just to check they are in the right places","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"plot(bl,xlim=xlim,ylim=ylim)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/#Construct-the-system-structure","page":"4. Multiple stationary bodies","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"We construct the system with the same syntax as for a single body:","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"sys = viscousflow_system(g,bl,phys_params=my_params);\nnothing #hide","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"u0 = init_sol(sys)\ntspan = (0.0,10.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/#Solve","page":"4. Multiple stationary bodies","title":"Solve","text":"","category":"section"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Here, we run it for a little while, just to demonstrate:","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"@time step!(integrator,2.0)","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/#Examine","page":"4. Multiple stationary bodies","title":"Examine","text":"","category":"section"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Let's inspect the results","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"sol = integrator.sol\nplt = plot(layout = (1,3), size = (800, 200), legend=:false)\ntsnap = 0.0:1.0:2.0\nfor (i, t) in enumerate(tsnap)\n    plot!(plt[i],vorticity(sol,sys,t),sys,clim=(-10,10),levels=range(-10,10,length=30), color = :RdBu)\nend\nplt","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"Now we will examine the force on each body","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"fx1, fy1 = force(sol,sys,1)\nfx2, fy2 = force(sol,sys,2)\nfx3, fy3 = force(sol,sys,3);\nnothing #hide","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"plt = plot(layout = (2,1), size = (600, 400))\nplot!(plt[1],sol.t,2*fx1,xlim=(0,Inf),ylim=(0,4),xlabel=\"Convective time\",ylabel=\"\\$C_D\\$\",label=\"Lead body\",title=\"Drag force\")\nplot!(plt[2],sol.t,2*fy1,xlim=(0,Inf),ylim=(-2,2),xlabel=\"Convective time\",ylabel=\"\\$C_L\\$\",label=\"Lead body\",title=\"Side force\")\nplot!(plt[1],sol.t,2*fx2,xlim=(0,Inf),ylim=(0,4),xlabel=\"Convective time\",ylabel=\"\\$C_D\\$\",label=\"Trailing body\",title=\"Drag force\")\nplot!(plt[2],sol.t,2*fy2,xlim=(0,Inf),ylim=(-2,2),xlabel=\"Convective time\",ylabel=\"\\$C_L\\$\",label=\"Trailing body\",title=\"Side force\")","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"println(\"Mean drag coefficient on lead body = \", GridUtilities.mean(2*fx1[3:end]))","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"println(\"Mean drag coefficient on trailing body = \", GridUtilities.mean(2*fx2[3:end]))","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"","category":"page"},{"location":"manual/4.-Multiple-stationary-bodies/","page":"4. Multiple stationary bodies","title":"4. Multiple stationary bodies","text":"This page was generated using Literate.jl.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"EditURL = \"<unknown>/literate/5.-Viscous-flow-about-a-moving-body.jl\"","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#.-Viscous-flow-about-a-moving-body","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"In this notebook we will demonstrate the simulation of a moving body. It is straightforward to set up a moving body. The main caveat is that the simulation is slower, because the integrator must update the operators continuously throughout the simulation.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"We will demonstrate this on an oscillating flat plate.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"using ViscousFlow","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"using Plots","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Problem-specification-and-discretization","page":"5. Viscous flow about a moving body","title":"Problem specification and discretization","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"For simplicity, we will not create a free stream in this problem. Everything here is the usual.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"my_params = Dict()\nmy_params[\"Re\"] = 200","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"xlim = (-1.0,1.0)\nylim = (-1.0,1.0)\nmy_params[\"grid Re\"] = 4.0\ng = setup_grid(xlim,ylim,my_params)\n\nΔs = surface_point_spacing(g,my_params)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Set-up-body","page":"5. Viscous flow about a moving body","title":"Set up body","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Set up the plate and place it at the origin. (We don't actually have to move it, since it defaults to the origin, but it's helpful to put this here in case we wish to initialize it differently.)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"body = Plate(1.0,Δs)\nT = RigidTransform((0,0),0)\nT(body)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Set-the-body-motion","page":"5. Viscous flow about a moving body","title":"Set the body motion","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Now we specify the body motion. We will use oscillatory pitch-heave kinematics for this:","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"a = 0.25 # location of pitch axis, a = 0.5 is leading edge\nϕp = -π/2  # phase lag of pitch\nϕh = 0.0  # phase lag of heave\nA = 0.25  # amplitude/chord\nfstar = 1/π # fc/U\nα₀ = 0 # mean angle of attack\nΔα = 10π/180 # amplitude of pitching\nU₀ = 0.0 # translational motion (set to zero in place of free stream)\nK = π*fstar # reduced frequency, K = πfc/U\n\noscil1 = RigidBodyTools.PitchHeave(U₀,a,K,ϕp,α₀,Δα,A,ϕh)\nmotion = RigidBodyMotion(oscil1)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"We can inspect the kinematics in this motion by plotting them:","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"plot(motion)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Define-the-boundary-condition-functions","page":"5. Viscous flow about a moving body","title":"Define the boundary condition functions","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Instead of using the default boundary condition functions, we define special ones here that provide the instantaneous surface velocity (i.e. the velocity of every surface point) from the prescribed motion. Every surface has an \"exterior\" and \"interior\" side. For a flat plate, these two sides are the upper and lower sides, and both sides are next to the fluid, so both of them are assigned the prescribed velocity of the plate. (For closed bodies, we would assign this velocity to only one of the sides, and zero to the other side. We will see an example of this in a later case.) We pack these into a special dictionary and pass these to the system construction.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"function my_vsplus(t,base_cache,phys_params,motions)\n  vsplus = zeros_surface(base_cache)\n  surface_velocity!(vsplus,base_cache,motions,t)\n  return vsplus\nend\n\nfunction my_vsminus(t,base_cache,phys_params,motions)\n  vsminus = zeros_surface(base_cache)\n  surface_velocity!(vsminus,base_cache,motions,t)\n  return vsminus\nend\n\nbcdict = Dict(\"exterior\" => my_vsplus, \"interior\" => my_vsminus)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Construct-the-system-structure","page":"5. Viscous flow about a moving body","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Here, we supply the motion and boundary condition functions as additional arguments.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"sys = viscousflow_system(g,body,phys_params=my_params,motions=motion,bc=bcdict);\nnothing #hide","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Before we solve the problem, it is useful to note that the Reynolds number we specified earlier may not be the most physically-meaningful Reynolds number. More relevant in this problem is the Reynolds number based on the maximum body speed.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Umax, imax, tmax, bmax = maxlistvelocity(sys)\nRe_eff = my_params[\"Re\"]*Umax","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"u0 = init_sol(sys)\ntspan = (0.0,10.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Solve","page":"5. Viscous flow about a moving body","title":"Solve","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"This takes longer per time step than it does for stationary bodies. Here, we only run it for 1.5 time units just to demonstrate it.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"@time step!(integrator,1.5)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/#Examine-the-solution","page":"5. Viscous flow about a moving body","title":"Examine the solution","text":"","category":"section"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"Let's look at a few snapshots of the vorticity field. Note that the plotting here requires us to explicitly call the surfaces function to generate the instantaneous configuration of the plate.","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"sol = integrator.sol\nplt = plot(layout = (1,3), size = (800, 300), legend=:false)\ntsnap = 0.5:0.5:1.5\nfor (i, t) in enumerate(tsnap)\n    plot!(plt[i],vorticity(sol,sys,t),sys,layers=false,title=\"t = $(round(t,digits=2))\",clim=(-5,5),levels=range(-5,5,length=30),color = :RdBu)\n    plot!(plt[i],surfaces(sol,sys,t))\nend\nplt","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"and the forces","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"sol = integrator.sol\nfx, fy = force(sol,sys,1);\nnothing #hide","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"plot(\nplot(sol.t,2*fx,xlim=(0,Inf),ylim=(-3,3),xlabel=\"Convective time\",ylabel=\"\\$C_D\\$\",legend=:false),\nplot(sol.t,2*fy,xlim=(0,Inf),ylim=(-6,6),xlabel=\"Convective time\",ylabel=\"\\$C_L\\$\",legend=:false),\n    size=(800,350)\n)","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"","category":"page"},{"location":"manual/5.-Viscous-flow-about-a-moving-body/","page":"5. Viscous flow about a moving body","title":"5. Viscous flow about a moving body","text":"This page was generated using Literate.jl.","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"EditURL = \"<unknown>/literate/6.-Variable-free-stream.jl\"","category":"page"},{"location":"manual/6.-Variable-free-stream/#.-Variable-free-stream","page":"6. Variable free stream","title":"6. Variable free stream","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"In this notebook we will simulate the flow with a time-varying free stream past a stationary body. To demonstrate this, we will solve for oscillatory flow past a rectangular object, in which the x component of the free stream is","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"U_infty(t) = A sin(Omega t)","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"using ViscousFlow","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"using Plots","category":"page"},{"location":"manual/6.-Variable-free-stream/#Problem-specification","page":"6. Variable free stream","title":"Problem specification","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"We will set the Reynolds number to 200","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"my_params = Dict()\nmy_params[\"Re\"] = 200","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"In order to set a time-varying free stream, we have to define a function that provides the instantaneous free stream components and pass that function into the system definition. In this function, we will use the Sinusoid function (available via the RigidBodyTools module) to create the modulated free stream. To demonstrate its possibilities, we will pass in the parameters for the sinusoid via the my_params dictionary. The \"freestream average\" specifies a mean free stream, if desired.","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"my_params[\"freestream average\"] = 0.0\nmy_params[\"freestream frequency\"]  = 2.0\nmy_params[\"freestream amplitude\"] = 1.0\nmy_params[\"freestream phase\"] = 0.0","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Now we define the function. We can call it anything we want, but it has to have the argument signature as shown. The Sinusoid function is used, with the shift operator >> to apply any phase lag.","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"function my_freestream(t,phys_params)\n    U = phys_params[\"freestream average\"]\n    Ω = phys_params[\"freestream frequency\"]\n    Ax = phys_params[\"freestream amplitude\"]\n    ϕx = phys_params[\"freestream phase\"]\n    Vinfmag = Ax*(RigidBodyTools.Sinusoid(Ω) >> (ϕx/Ω))\n    Vinf_angle = get(phys_params,\"freestream angle\",0.0)\n\n    Uinf = (U + Vinfmag(t))*cos(Vinf_angle)\n    Vinf = (U + Vinfmag(t))*sin(Vinf_angle)\n    return Uinf, Vinf\nend","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"The freestream function is generically considered a forcing function, so we pass it in via the \"freestream\" key in the forcing dictionary.","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"forcing_dict = Dict(\"freestream\" => my_freestream)","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Now let us carry on with the other usual steps:","category":"page"},{"location":"manual/6.-Variable-free-stream/#Discretize","page":"6. Variable free stream","title":"Discretize","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"xlim = (-2.0,2.0)\nylim = (-1.5,1.5)\nmy_params[\"grid Re\"] = 4.0\ng = setup_grid(xlim,ylim,my_params)","category":"page"},{"location":"manual/6.-Variable-free-stream/#Set-up-bodies","page":"6. Variable free stream","title":"Set up bodies","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Here, we will set up an ellipse in the center of the domain","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Δs = surface_point_spacing(g,my_params)\nbody = Ellipse(0.25,0.5,Δs)\n\nT = RigidTransform((0.0,0.0),0.0)\nT(body)","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"plot(body,xlim=xlim,ylim=ylim)","category":"page"},{"location":"manual/6.-Variable-free-stream/#Construct-the-system-structure","page":"6. Variable free stream","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"This step is like the previous notebook, but now we also provide the body and the freestream:","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"sys = viscousflow_system(g,body,phys_params=my_params,forcing=forcing_dict);\nnothing #hide","category":"page"},{"location":"manual/6.-Variable-free-stream/#Initialize","page":"6. Variable free stream","title":"Initialize","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Now, we initialize with zero vorticity","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"u0 = init_sol(sys)","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"and create the integrator","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"tspan = (0.0,10.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/6.-Variable-free-stream/#Solve","page":"6. Variable free stream","title":"Solve","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Now we are ready to solve the problem. Let's advance the solution to t = 25.","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"@time step!(integrator,2.5)","category":"page"},{"location":"manual/6.-Variable-free-stream/#Examine","page":"6. Variable free stream","title":"Examine","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Let's look at the flow field at the end of this interval","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"sol = integrator.sol\nplt = plot(layout = (2,2), size = (800, 600), legend=:false)\ntsnap = 1.0:0.5:2.5\nfor (i, t) in enumerate(tsnap)\n    plot!(plt[i],vorticity(sol,sys,t),sys,layers=false,title=\"t = $(round(t,digits=2))\",clim=(-10,10),levels=range(-10,10,length=30),color = :RdBu)\n    plot!(plt[i],surfaces(sol,sys,t))\nend\nplt","category":"page"},{"location":"manual/6.-Variable-free-stream/#Compute-the-force-history","page":"6. Variable free stream","title":"Compute the force history","text":"","category":"section"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Just as we did for the stationary body in a constant free stream","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"fx, fy = force(sol,sys,1);\nnothing #hide","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"Plot them","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"plot(\nplot(sol.t,2*fx,xlim=(0,Inf),ylim=(-6,6),xlabel=\"Convective time\",ylabel=\"\\$C_D\\$\",legend=:false),\nplot(sol.t,2*fy,xlim=(0,Inf),ylim=(-6,6),xlabel=\"Convective time\",ylabel=\"\\$C_L\\$\",legend=:false),\n    size=(800,350)\n)","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"The mean drag and lift coefficients are","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"meanCD = GridUtilities.mean(2*fx[3:end])","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"meanCL = GridUtilities.mean(2*fy[3:end])","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"","category":"page"},{"location":"manual/6.-Variable-free-stream/","page":"6. Variable free stream","title":"6. Variable free stream","text":"This page was generated using Literate.jl.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"EditURL = \"<unknown>/literate/1.-Basic-viscous-flow.jl\"","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#.-Basic-viscous-flow","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"In this example, we will simulate various examples of a basic unbounded viscous flow–-a flow without boundaries. Our initial condition will be a distribution of vorticity.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"using Plots","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"using ViscousFlow","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"using Plots","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#The-basic-steps","page":"1. Basic viscous flow","title":"The basic steps","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"To carry out any simulation in ViscousFlow, we need to carry out a few basic steps:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Specify the problem: Set the Reynolds number, the free stream, and any other problem parameters\nDiscretize: Set up a solution domain, choose the grid Reynolds number and the critical time step limits\nConstruct the system structure: Create the operators that will be used to perform the simulation\nInitialize: Set the initial flow field and initialize the integrator\nSolve: Solve the flow field\nExamine: Examine the results","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"We will go through all of these here. For the examples we will carry out in this notebook, the first two steps need only be carried out once.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"The package utilizes parameters arranged into a dictionary, or Dict. The dictionary associates names (or keys) with values. Most of these key have standardizes names. We will describe the entries in this as we go, adding them in one at a time for expositional purposes. We initializing it first and call it my_params for this example.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"my_params = Dict()","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Problem-specification","page":"1. Basic viscous flow","title":"Problem specification","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"We will set the Reynolds number to be 200 and no free stream. The Reynolds number key is \"Re\". If we had a free stream, then we would set this with two keys: \"freestream speed\" and \"freestream angle\". They default to zero if we don't put anything into the dictionary. But we always have to put in the Reynolds number.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"my_params[\"Re\"] = 200","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Discretize","page":"1. Basic viscous flow","title":"Discretize","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"We will set up a domain from x = -2 to x = 2, and y = -2 to y = 2. The Reynolds number helps us determine the grid spacing and time step size. To set these, we set a target grid Reynolds number, with the key \"grid Re\". We will set this to 4 here; if we don't set it, it defaults to 2. Note that the choice we make here is a compromise:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"smaller grid Reynolds number means smaller grid spacing, but slower simulations\nlarger grid Reynolds number means less accurate results","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"xlim = (-2.0,2.0)\nylim = (-2.0,2.0)\nmy_params[\"grid Re\"] = 4.0","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Then we set up the grid","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"g = setup_grid(xlim,ylim,my_params)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Construct-the-system-structure","page":"1. Basic viscous flow","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"This part is easy - you supply the parameters you have just set up. It returns a structure with all of the necessary mathematical operators:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"sys = viscousflow_system(g,phys_params=my_params);\nnothing #hide","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"This is now ready to solve any unbounded viscous flow problems. Now, we will solve a few different problems to see how it works.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#A-basic-example:-the-Lamb-Oseen-vortex","page":"1. Basic viscous flow","title":"A basic example: the Lamb-Oseen vortex","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"This example starts with a single vortex with a Gaussian distribution of vorticity. To generate this, will use the SpatialGaussian function: The command below creates a Gaussian with radius σ at (0,0) with strength 1.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"σ = 0.2\nx0 = 0.0\ny0 = 0.0\nA = 1\ngauss = SpatialGaussian(σ,x0,y0,A)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Initialize","page":"1. Basic viscous flow","title":"Initialize","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Now, we create an instance of this vorticity distribution on the grid by calling init_sol with this vortex.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"u0 = init_sol(gauss,sys)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"We use this initial condition to initialize the integrator. The integrator is the structure that holds all of our solution and operator information. With it, we can start the simulation, restart the simulation later, etc. We specify a range of time over which to advance the solution.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Note: This range need only be large enough to contain the whole interval of time we wish to simulate. It does not need to be chosen very precisely.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Note 2: There is no need to restart the problem! We can keep applying the step! function below as long we need.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"tspan = (0.0,10.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Solve","page":"1. Basic viscous flow","title":"Solve","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Now we are ready to solve the problem. Let's advance the solution to t = 1:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"step!(integrator,1.0)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"We can see now that the solution has been advanced in time:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"integrator","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Examine","page":"1. Basic viscous flow","title":"Examine","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Let's examine the results. It is important to show a few different ways that we can do this. The most straightforward way is to just look at the flow fields at the current state of the integrator. For example, to get the current velocity field, type velocity(integrator). We can do the same for vorticity, streamfunction (the streamlines), scalarpotential, convective_derivative, and pressure.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"We will look at some of these at the current state:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"plot(\n plot(vorticity(integrator),sys,title=\"Vorticity\"),\n plot(streamfunction(integrator),sys,title=\"Streamlines\"),\n plot(pressure(integrator),sys,title=\"Pressure\"),\n plot(velocity(integrator),sys))","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"For this problem, we can compare with the exact solution. The exact solution is also a Gaussian, but with a radius sqrtsigma^2+4tRe","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"oseen_exact(t) = SpatialGaussian(sqrt(σ^2+4*t/my_params[\"Re\"]),x0,y0,A)\nexactsol(t) = init_sol(oseen_exact(t),sys)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"plot(vorticity(integrator)[:,104],label=\"Numerical\")\nplot!(vorticity(exactsol(integrator.t),sys,integrator.t)[:,104],label=\"Exact\")\nplot!(title=string(\"Vorticity at t = \",round(integrator.t,digits=2)))","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Second-example:-co-rotating-vortices","page":"1. Basic viscous flow","title":"Second example: co-rotating vortices","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"The previous example is not very exciting, because the convection of the flow is simply circular. The next example is more interesting, because we will start with two vortices that influence each other's motion:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"σ = 0.1\nx01, y01 = 0.5, 0.0\nx02, y02 = -0.5, 0.0\nA = 1\ntwogauss = SpatialGaussian(σ,x01,y01,A) + SpatialGaussian(σ,x02,y02,A)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Initialize-2","page":"1. Basic viscous flow","title":"Initialize","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Now, we create an instance of this vorticity distribution on the grid.","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"u0 = init_sol(twogauss,sys)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"plot(vorticity(u0,sys,0.0),sys)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"tspan = (0.0,8.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Solve-2","page":"1. Basic viscous flow","title":"Solve","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Now we are ready to solve the problem. Let's advance the solution to t = 8:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"step!(integrator,8.0)","category":"page"},{"location":"manual/1.-Basic-viscous-flow/#Examine-2","page":"1. Basic viscous flow","title":"Examine","text":"","category":"section"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"In this case, it is best to view the results as an animation. In the previous example, we just looked at the final state of the integrator. Here, to animate, we will make use of the solution history that is held by the integrator, integrator.sol. Let's create an alias for this to shorten our commands:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"sol = integrator.sol;\nnothing #hide","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"The vortices orbit each other and then eventually merge together. If we wish to make a nice figure, we can arrange snapshots on a grid:","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"plt = plot(layout = (2,4), size = (800, 400), legend=:false)\ntsnap = 0.0:1.0:7.0\nfor (i, t) in enumerate(tsnap)\n    plot!(plt[i],vorticity(sol,sys,t),sys,levels=range(0.1,5,length=31))\nend\nsavefig(plt,\"CoRotating.pdf\")\nplt","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"If you wish to animate the solution, e.g., plotting the vorticity every 5 steps you can use","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"@gif for t in sol.t\n   plot(vorticity(sol,sys,t),sys)\nend every 5","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Try other examples!","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"Make one or both of the vortices into elliptical shapes\nMake one stronger than the other\nAdd other vortices into the initial distribution","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"","category":"page"},{"location":"manual/1.-Basic-viscous-flow/","page":"1. Basic viscous flow","title":"1. Basic viscous flow","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#ViscousFlow.jl","page":"Home","title":"ViscousFlow.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"a framework for simulating viscous incompressible flows","category":"page"},{"location":"","page":"Home","title":"Home","text":"The objective of this package is to allow easy setup and fast simulation of incompressible flows, particularly those past bodies in motion. The package provides tools for","category":"page"},{"location":"","page":"Home","title":"Home","text":"constructing grids and body shapes,\nspecifying the relevant parameters and setting their values,\nsolving the problem, and finally,\nvisualizing and analyzing the results.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The underlying grids are uniform and Cartesian, making use of the CartesianGrids package. This package allows the use of the lattice Green's function (LGF) for inverting the Poisson equation; the diffusion operators are solved with the integrating factor (Liska and Colonius [2]). Many of the core aspects of the fluid-body interaction are based on the Method of Immersed Layers [1], ImmersedLayers, which is an extension of the immersed boundary projection method [3]. The solver is implemented with the ConstrainedSystems package. Tools for creating bodies and their motions are based on the RigidBodyTools package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package works on Julia 1.4 and above and is registered in the general Julia registry. To install from the REPL, type e.g.,","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add ViscousFlow","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, in any version, type","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using ViscousFlow","category":"page"},{"location":"","page":"Home","title":"Home","text":"The plots in this documentation are generated using Plots.jl. You might want to install that, too, to follow the examples.","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"[1]: Eldredge, J. D. (2021) \"A method of immersed layers on Cartesian grids, with application to incompressible flows,\" arXiv:2103.04521.","category":"page"},{"location":"","page":"Home","title":"Home","text":"[2]: Liska, S. and Colonius, T. (2017) \"A fast immersed boundary method for external incompressible viscous flows using lattice Green's functions,\" J. Comput. Phys., 331, 257–279.","category":"page"},{"location":"","page":"Home","title":"Home","text":"[3]: Taira, K. and Colonius, T. (2007) \"The immersed boundary method: a projection approach,\" J. Comput. Phys., 225, 2118–2137.","category":"page"},{"location":"","page":"Home","title":"Home","text":"[4]: Wang, C. and Eldredge, J. D. (2015) \"Strongly coupled dynamics of fluids and rigid-body systems with the immersed boundary projection method,\" J. Comput. Phys., 295, 87–113. (DOI).","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"EditURL = \"<unknown>/literate/2.-Basic-flow-with-a-stationary-body.jl\"","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#.-Basic-flow-with-a-stationary-body","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"In this notebook we will simulate the flow past a stationary body.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"using ViscousFlow","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"using Plots","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#The-basic-steps","page":"2. Basic flow with a stationary body","title":"The basic steps","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"From the previous notebook, we add one additional step:","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Specify the problem: Set the Reynolds number, the free stream, and any other problem parameters\nDiscretize: Set up a solution domain, choose the grid Reynolds number and the critical time step limits\nSet up bodies: Create the body or bodies and specify their motions, if any\nConstruct the system structure: Create the operators that will be used to perform the simulation\nInitialize: Set the initial flow field and initialize the integrator\nSolve: Solve the flow field\nExamine: Examine the results","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"The rest of the steps are nearly the same as in the previous example.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"As before, we initialize the parameters dictionary:","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"my_params = Dict()","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Problem-specification","page":"2. Basic flow with a stationary body","title":"Problem specification","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Set the Reynolds number and free stream. We will set the free stream to be in the x direction, with speed equal to 1.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"my_params[\"Re\"] = 200\nmy_params[\"freestream speed\"] = 1.0\nmy_params[\"freestream angle\"] = 0.0","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Discretize","page":"2. Basic flow with a stationary body","title":"Discretize","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"We set the grid Re to 4.0 here to get a quicker solution, though it is generally better to make this smaller (it defaults to 2.0).","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"xlim = (-1.0,5.0)\nylim = (-2.0,2.0)\nmy_params[\"grid Re\"] = 4.0\ng = setup_grid(xlim,ylim,my_params)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Set-up-bodies","page":"2. Basic flow with a stationary body","title":"Set up bodies","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Here, we will set up a rectangle of half-height 0.5 and half-width 0.25 at 45 degrees angle of attack. We also need to supply the spacing between points. For this, we use the function surface_point_spacing","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Δs = surface_point_spacing(g,my_params)\nbody = Rectangle(0.5,0.25,Δs)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"We place the body at a desired location and orientation with the RigidTransform function. This function creates an operator T that acts in-place on the body: after the operation is applied, body is transformed to the correct location/orientation.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"cent = (0.0,0.0) # center of body\nα = 45π/180 # angle\nT = RigidTransform(cent,α)\nT(body) # transform the body to the current configuration","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Let's plot it just to make sure","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"plot(body,xlim=xlim,ylim=ylim)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Construct-the-system-structure","page":"2. Basic flow with a stationary body","title":"Construct the system structure","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"This step is like the previous notebook, but now we also provide the body as an argument. It is important to note that we have not provided any explicit information about the boundary conditions on our shape. It therefore assumes that we want to enforce zero velocity on the shape. We will show another example later in which we change this.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"sys = viscousflow_system(g,body,phys_params=my_params);\nnothing #hide","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Initialize","page":"2. Basic flow with a stationary body","title":"Initialize","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Now, we initialize with zero vorticity. Note that we do this by calling init_sol with no argument except for sys itself.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"u0 = init_sol(sys)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"and now create the integrator, with a long enough time span to hold the whole solution history:","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"tspan = (0.0,20.0)\nintegrator = init(u0,tspan,sys)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Solve","page":"2. Basic flow with a stationary body","title":"Solve","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Now we are ready to solve the problem. Let's advance the solution to t = 1.","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"@time step!(integrator,1.0)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Examine","page":"2. Basic flow with a stationary body","title":"Examine","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Let's look at the flow field at the end of this interval","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"plot(\nplot(vorticity(integrator),sys,title=\"Vorticity\",clim=(-15,15),levels=range(-15,15,length=30), color = :RdBu,ylim=ylim),\nplot(streamfunction(integrator),sys,title=\"Streamlines\",ylim=ylim,color = :Black),\n    size=(700,300)\n    )","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/#Compute-the-force-history","page":"2. Basic flow with a stationary body","title":"Compute the force history","text":"","category":"section"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"To do this, we supply the solution history sol, the system sys, and the index of the body (1).","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"sol = integrator.sol;\nfx, fy = force(sol,sys,1);\nnothing #hide","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"Plot the histories. Note that we are actually plotting the drag and lift coefficient histories here: $ CD = \\dfrac{Fx}{\\frac{1}{2}\\rho U\\infty^2 L}, \\quad CL = \\dfrac{Fy}{\\frac{1}{2}\\rho U\\infty^2 L} $ Since the quantities in this simulation are already scaled by rho, U_infty, and L (because rho has been scaled out of the equations, and the free stream speed is set to 1 and the height of the shape to 1), then we obtain these coefficients by simply dividing by 1/2, or equivalently, by multiplying by 2:","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"plot(\nplot(sol.t,2*fx,xlim=(0,Inf),ylim=(0,4),xlabel=\"Convective time\",ylabel=\"\\$C_D\\$\",legend=:false),\nplot(sol.t,2*fy,xlim=(0,Inf),ylim=(-4,4),xlabel=\"Convective time\",ylabel=\"\\$C_L\\$\",legend=:false),\n    size=(800,350)\n)","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"The mean drag and lift coefficients (omitting the first two steps) are","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"meanCD = GridUtilities.mean(2*fx[3:end])","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"meanCL = GridUtilities.mean(2*fy[3:end])","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"","category":"page"},{"location":"manual/2.-Basic-flow-with-a-stationary-body/","page":"2. Basic flow with a stationary body","title":"2. Basic flow with a stationary body","text":"This page was generated using Literate.jl.","category":"page"}]
}
